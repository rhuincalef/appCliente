#:kivy 1.0

# NOTA: La clase que hereda de App tiene que tener el mismo nombre que el layout del 
# archivo .kv.

#:import sist_op os
#:import const constantes
#:import dictAdapter kivy.adapters.dictadapter
#:import appModule kivy.app

<SubirCapturasServidorScreen>:
	listado_capturas: listado

    GridLayout:
		id: layout_principal
		orientation: 'vertical'
		cols: 1
		rows: 4
		#rows: 3

		Label:
			id: titulo
			text: "Seleccione las fallas que desea subir al servidor"
			size_hint:(1,0.05)
			color: const.COLOR_TEXTOS
			canvas.before:
				Color:
					rgba: const.COLOR_LABELS_RGBA
				Rectangle:
					pos: self.pos
					size: self.size

		BoxLayout:
			id:layout_seleccionar_todo
			orientation: 'horizontal'
			size_hint:(1,0.05)

			color: const.COLOR_TEXTOS
			canvas.before:
				Color:
					rgba: const.COLOR_LABELS_RGBA
				Rectangle:
					pos: self.pos
					size: self.size


			CheckBox:
				id: check_box_seleccionar_todo
				on_active: root.check_box_activado()
				#size_hint: (0.2,1)
				size_hint: (0.15,1)

			Label:
				id: label_seleccionar_todo
				text: 'Seleccionar todas las fallas'
				size_hint: (0.15,1)
				halign: 'left'
				

			BoxLayout:
				id: filler_layout
				orientation: 'horizontal'
				size_hint:(0.7,1)


		GridLayout:
			id: layout_labels
			orientation: 'horizontal'
			cols: 3
			rows: 1
			size_hint:(1,0.05)
			Label:
				id: id_falla_col
				text: "Id Falla"
				size_hint:(0.33,1)
				color: const.COLOR_TEXTOS
				canvas.before:
					Color:
						rgba: const.COLOR_LABELS_RGBA
					Rectangle:
						pos: self.pos
						size: self.size

			Label:
				id: calle_falla_col
				text: "Calle/Latitud"
				size_hint:(0.34,1)
				color: const.COLOR_TEXTOS
				canvas.before:
					Color:
						rgba: const.COLOR_LABELS_RGBA
					Rectangle:
						pos: self.pos
						size: self.size

			Label:
				id: altura_falla_col
				text: "Rango estimado/Longitud"
				size_hint:(0.33,1)
				color: const.COLOR_TEXTOS
				canvas.before:
					Color:
						rgba: const.COLOR_LABELS_RGBA
					Rectangle:
						pos: self.pos
						size: self.size

		### ListView para seleccion de las fallas
	    ListView:
	    	id:listado

	    	# Popula el ListView con el listado de objetos obtenidos del filtrado de capturas del capturador y capturadorInformado
	    	#adapter: dictAdapter.ListAdapter(data = appModule.App.get_running_app().filtrarCapturas(),propagate_selection_to_data=True, args_converter = root.args_converter,selection_mode = 'multiple',allow_empty_selection = False,cls = compItem.CompositeListItem)
	    	
	    	adapter: dictAdapter.ListAdapter(data =[] ,propagate_selection_to_data=True, args_converter = root.args_converter,selection_mode = 'multiple',allow_empty_selection = True,cls = compItem.CompositeListItem)
	    	
	    	
	    	# Tamanio en porcentajes con respecto al widget anterior
	    	#size_hint:(1,0.9)
	    	size_hint:(1,0.85)

		    
	#Footer del screen
	GridLayout:
		id: footer_layout
		size_hint:(1,0.05)
		cols: 2
		rows: 1

		col_force_default: True
		col_default_width: const.COL_DEFAULT_WIDTH
	    	
		#Espaciado entre los componentes del layout (en porcentaje del widget)
		spacing: const.DEFAULT_SPACING

		#Relleno entre el layout y los widgets hijos
		padding: [const.DEFAULT_PADDING_HORIZONTAL,0,const.DEFAULT_PADDING_HORIZONTAL,0]


	    Button:
        	id: bt_subir_archivos
        	text: "Enviar fallas"
        	on_press: root.enviar_capturas()

        Button:	
        	id: bt_salir
        	on_press: root.volver()
        	text: "Volver"




    #BACKUP!
	#Barra de opciones abajo
	#GridLayout:
	#	id: layout_principal
	#	orientation: 'horizontal'
	#	cols: 3
	#	rows: 1
	#	size_hint:(1,0.05)

	#    Button:
    #    	id: bt_subir_archivos
    #    	text: "Enviar fallas"
    #    	on_press: root.enviar_capturas()

    #    Button:	
    #    	id: bt_salir
    #    	on_press: root.volver()
    #    	text: "Volver"

